"Description": "Creates a Biopath App stack using Elastic Container Service"
# https://github.com/mreferre/yelb/blob/master/deployments/platformdeployment/AWS/ECS/cfn/yelb-cloudformation-ECS-deployment.yaml

# --------------------------------------------------------------------------
#     How to run
# --------------------------------------------------------------------------
# aws cloudformation create-stack --template-body file://./yelb-cloudformation-ECS-deployment.yaml 
#   --parameters 
#       ParameterKey=Cluster,               ParameterValue="BiopathCluster" 
#       ParameterKey=VPC,                   ParameterValue="vpc-cfeafcb6" 
#       ParameterKey=PublicSubnetOne,       ParameterValue="subnet-6a88e013" 
#       ParameterKey=PublicSubnetTwo,       ParameterValue="subnet-6cc35627" 
#       ParameterKey=LaunchType,            ParameterValue="FARGATE" 
#       ParameterKey=Domain,                ParameterValue="biopath.local" 
#       ParameterKey=CountOfFrontendTasks,  ParameterValue=2 
#       ParameterKey=CountOfBackendTasks,   ParameterValue=3 
#       ParameterKey=PublicIP,              ParameterValue="ENABLED" 
#   --capabilities CAPABILITY_IAM --stack-name biopath-fargate --region us-west-2
# --------------------------------------------------------------------------

Parameters:
  VPC:
    Description: The VPC that the ECS cluster is deployed to
    Type: AWS::EC2::VPC::Id
 
  PublicSubnetOne:
    Type: AWS::EC2::Subnet::Id
    Description: First Public Subnet

  PublicSubnetTwo:
    Type: AWS::EC2::Subnet::Id
    Description: Second Public Subnet

  Cluster:
    Description: The ECS Cluster ID that this service should run on
    Type: String
    Default: "default"

  Domain:
    Description: An arbitrary internal domain name for the application (only required for internal service discovery - default is biopath.local). It must be unique across multiple deploymemts.
    Type: String
    Default: "biopath.local"

  CountOfFrontendTasks:
    Description: The number of tasks to be instantiated for the Frontend  
    Type: Number
    Default: 1

  CountOfBackendTasks:
    Description: The number of tasks to be instantiated for the Backend  
    Type: Number
    Default: 1

  LaunchType:
    Description: Standard Launch
    Type: String
    Default: FARGATE
    AllowedValues:
      - EC2
      - FARGATE
  
  PublicIP:
    Description: 
    Type: String 
    Default: ENABLED
    AllowedValues: 
      - ENABLED 
      - DISABLED 

Resources:
  #TODO: the database might have to be added here, we're using 
  #   AWS' RDS so it might be the job of this yaml file to tell AWS
  #   that we are doing that 


  #--------------------------------------------------------------------
  #       Load balencing Resources
  #--------------------------------------------------------------------

  # the load balencer for the stack, the load balencer is responsible
  # for dealing with internet traffic/managing load on the website
  BiopathLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets: [ !Ref 'PublicSubnetOne' , !Ref 'PublicSubnetTwo' ]
      SecurityGroups: [ !Ref BiopathLBSecurityGroup ]

  # the load balencer will define the format of incoming messages
  # to the rest of the project
  BiopathLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref BiopathLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref BiopathTargetGroup

  BiopathTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip 
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP

  #--------------------------------------------------------------------
  #       Security Resources
  #--------------------------------------------------------------------

  BiopathAppserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Biopath-appserver security group
      SecurityGroupIngress:
      - CidrIp: '0.0.0.0/0'
        IpProtocol: tcp
        ToPort: 4567
        FromPort: 4567
      VpcId: !Ref 'VPC'

  BiopathFrontendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Biopath-frontend security group
      SecurityGroupIngress:
      - CidrIp: '0.0.0.0/0'
        IpProtocol: tcp
        ToPort: 80
        FromPort: 80
      VpcId: !Ref 'VPC'

  # the load balencer security group
  BiopathLBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: yealb load balancer security group
      SecurityGroupIngress:
      - CidrIp: '0.0.0.0/0'
        IpProtocol: tcp
        ToPort: 80
        FromPort: 80
      VpcId: !Ref 'VPC'

  #--------------------------------------------------------------------
  #       Service Discovery
  #--------------------------------------------------------------------
  BiopathServiceDiscoveryNameSpace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Description: "Service Discovery Namespace for Biopath"
      Vpc: !Ref 'VPC'
      Name: !Ref 'Domain'

  # uncomment if db is needed 
  # YelbDbServiceDiscoveryEntry:
  #   Type: AWS::ServiceDiscovery::Service
  #   Properties:
  #     Name: yelb-db
  #     DnsConfig:
  #       DnsRecords: 
  #         - Type: A
  #           TTL: "10"
  #       NamespaceId: !Ref 'BiopathServiceDiscoveryNameSpace'
  #     HealthCheckCustomConfig:
  #       FailureThreshold: '1'

  BiopathBackendServiceDiscoveryEntry:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: BiopathBackend
      DnsConfig:
        DnsRecords: 
          - Type: A
            TTL: "10"
        NamespaceId: !Ref 'BiopathServiceDiscoveryNameSpace'
      HealthCheckCustomConfig:
        FailureThreshold: '1'

  BiopathFrontedServiceDiscoveryEntry:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: BiopathFrontend
      DnsConfig:
        DnsRecords: 
          - Type: A
            TTL: "10"
        NamespaceId: !Ref 'BiopathServiceDiscoveryNameSpace'
      HealthCheckCustomConfig:
        FailureThreshold: '1'

  #--------------------------------------------------------------------
  #       Task Definitions and Service Resources
  #-------------------------------------------------------------------- 
  # this is for logging through AWS, something we may or may not use
  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 365  

  # This is a role which is used by the ECS tasks themselves.
  # all tasks will need to use it 
  BiopathECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  # Allow the ECS Tasks to download images from ECR
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'

                  # Allow the ECS tasks to upload logs to CloudWatch
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'

                  # Allow the ECS tasks to register into the target group
                  - 'elasticloadbalancing:DeregisterInstancesFromLoadBalancer'
                  - 'elasticloadbalancing:Describe*'
                  - 'elasticloadbalancing:RegisterInstancesWithLoadBalancer'
                  - 'elasticloadbalancing:DeregisterTargets'
                  - 'elasticloadbalancing:DescribeTargetGroups'
                  - 'elasticloadbalancing:DescribeTargetHealth'
                  - 'elasticloadbalancing:RegisterTargets'
                Resource: '*'      

  #task definition for the frontend 
  FrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
      Properties:
        Family: BiopathFrontend
        NetworkMode: awsvpc
        RequiresCompatibilities:
            - FARGATE
        ExecutionRoleArn: !Ref 'BiopathECSTaskExecutionRole'
        Cpu: 256
        Memory: 512
        ContainerDefinitions:
          - Name: BiopathFrontend
            Essential: true
            Image: biopath_frontend:frontend_latest
            Environment: 
              - Name: SEARCH_DOMAIN
                Value: !Ref 'Domain' 
            PortMappings:
              - ContainerPort: 80
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: !Ref AWS::StackName
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: "Biopath"

  # service for the frontend 
  FrontendService:
    Type: AWS::ECS::Service
    DependsOn: BiopathLoadBalancerListener
    Properties: 
      LaunchType: !Ref LaunchType
      Cluster: !Ref Cluster
      DesiredCount: !Ref CountOfUiTasks
        ServiceRegistries:
          - RegistryArn: !GetAtt BiopathFrontedServiceDiscoveryEntry.Arn
        TaskDefinition: !Ref 'FrontendTaskDefinition'
        LoadBalancers:
          - ContainerName: 'BiopathFrontend'
            ContainerPort: 80
            TargetGroupArn: !Ref BiopathTargetGroup
        NetworkConfiguration:
          AwsvpcConfiguration:
              AssignPublicIp: !Ref PublicIP
              Subnets: [ !Ref 'PublicSubnetOne' , !Ref 'PublicSubnetTwo'  ]
              SecurityGroups: [!Ref 'BiopathFrontendSecurityGroup' ]

  BackendService: 
    Type: AWS::ECS::Service
    Properties: 
      LaunchType: !Ref LaunchType
      Cluster: !Ref Cluster
      DesiredCount: !Ref CountOfAppserverTasks
      ServiceRegistries:
        - RegistryArn: !GetAtt BiopathBackendServiceDiscoveryEntry.Arn
      TaskDefinition: !Ref 'BackendTaskDefinition'
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: !Ref PublicIP
          Subnets: [ !Ref 'PublicSubnetOne' , !Ref 'PublicSubnetTwo'  ]
          SecurityGroups: [!Ref 'BackendSecurityGroup' ]

  BackendTaskDefinition:
      Type: AWS::ECS::TaskDefinition
      Properties:
        Family: BiopathBackend
        NetworkMode: awsvpc
        RequiresCompatibilities:
            - FARGATE
        ExecutionRoleArn: !Ref 'BiopathECSTaskExecutionRole'
        Cpu: 256
        Memory: 512
        ContainerDefinitions:
          - Name: BiopathBackend
            Essential: true
            Image: biopath_backend:backend_latest
            Environment: 
              - Name: SEARCH_DOMAIN
                Value: !Ref 'Domain' 
            LogConfiguration:
              LogDriver: awslogs
              Options:
                  awslogs-group: !Ref AWS::StackName
                  awslogs-region: !Ref AWS::Region
                  awslogs-stream-prefix: "Biopath"


# output the DNS name associated with the load balencer
Outputs:
  LoadBalencerURL:
    Description: URL of the ALB
    Value: !GetAtt BiopathLoadBalancer.DNSName